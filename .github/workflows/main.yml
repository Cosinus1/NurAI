name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: nurai-cluster
  GKE_ZONE: us-central1-a
  IMAGE_NAME: nurai
  DEPLOYMENT_NAME: nurai-web

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    # Configure Docker to use the gcloud command-line tool as a credential helper
    - name: Configure Docker
      run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA" \
          --tag "gcr.io/$PROJECT_ID/$IMAGE_NAME:latest" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA"
        docker push "gcr.io/$PROJECT_ID/$IMAGE_NAME:latest"

    # Set up kustomize
    - name: Set up Kustomize
      uses: imranismail/setup-kustomize@v1

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        # Replace the image in the k8s template
        sed -i "s|gcr.io/PROJECT_ID/nurai:latest|gcr.io/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA|g" kubernetes/deployment.yaml
        kubectl apply -f kubernetes/persistent-volume.yaml
        kubectl apply -f kubernetes/deployment.yaml
        kubectl apply -f kubernetes/service.yaml
        kubectl apply -f kubernetes/ingress.yaml
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide